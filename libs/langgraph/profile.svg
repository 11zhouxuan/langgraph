<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="298" onload="init(evt)" viewBox="0 0 1200 298" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="298" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">py-spy record -o profile.svg -- python ../../perf_test.py</text><text id="details" x="10" y="40.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="287.00"> </text><svg id="frames" x="10" width="1180" total_samples="6403"><g><title>submit (concurrent/futures/thread.py:172) (9 samples, 0.14%)</title><rect x="1.5149%" y="148" width="0.1406%" height="15" fill="rgb(227,0,7)" fg:x="97" fg:w="9"/><text x="1.7649%" y="158.50"></text></g><g><title>submit (concurrent/futures/thread.py:173) (11 samples, 0.17%)</title><rect x="1.6555%" y="148" width="0.1718%" height="15" fill="rgb(217,0,24)" fg:x="106" fg:w="11"/><text x="1.9055%" y="158.50"></text></g><g><title>_aroute (graph/graph.py:101) (27 samples, 0.42%)</title><rect x="1.4993%" y="116" width="0.4217%" height="15" fill="rgb(221,193,54)" fg:x="96" fg:w="27"/><text x="1.7493%" y="126.50"></text></g><g><title>to_thread (asyncio/threads.py:25) (27 samples, 0.42%)</title><rect x="1.4993%" y="132" width="0.4217%" height="15" fill="rgb(248,212,6)" fg:x="96" fg:w="27"/><text x="1.7493%" y="142.50"></text></g><g><title>ainvoke (utils/runnable.py:145) (13 samples, 0.20%)</title><rect x="1.9991%" y="132" width="0.2030%" height="15" fill="rgb(208,68,35)" fg:x="128" fg:w="13"/><text x="2.2491%" y="142.50"></text></g><g><title>get_async_callback_manager_for_config (langchain_core/runnables/config.py:503) (13 samples, 0.20%)</title><rect x="1.9991%" y="148" width="0.2030%" height="15" fill="rgb(232,128,0)" fg:x="128" fg:w="13"/><text x="2.2491%" y="158.50"></text></g><g><title>configure (langchain_core/callbacks/manager.py:1996) (13 samples, 0.20%)</title><rect x="1.9991%" y="164" width="0.2030%" height="15" fill="rgb(207,160,47)" fg:x="128" fg:w="13"/><text x="2.2491%" y="174.50"></text></g><g><title>_configure (langchain_core/callbacks/manager.py:2191) (12 samples, 0.19%)</title><rect x="2.0147%" y="180" width="0.1874%" height="15" fill="rgb(228,23,34)" fg:x="129" fg:w="12"/><text x="2.2647%" y="190.50"></text></g><g><title>_tracing_v2_is_enabled (langchain_core/tracers/context.py:149) (12 samples, 0.19%)</title><rect x="2.0147%" y="196" width="0.1874%" height="15" fill="rgb(218,30,26)" fg:x="129" fg:w="12"/><text x="2.2647%" y="206.50"></text></g><g><title>tracing_is_enabled (langsmith/utils.py:105) (12 samples, 0.19%)</title><rect x="2.0147%" y="212" width="0.1874%" height="15" fill="rgb(220,122,19)" fg:x="129" fg:w="12"/><text x="2.2647%" y="222.50"></text></g><g><title>get_env_var (langsmith/utils.py:376) (10 samples, 0.16%)</title><rect x="2.0459%" y="228" width="0.1562%" height="15" fill="rgb(250,228,42)" fg:x="131" fg:w="10"/><text x="2.2959%" y="238.50"></text></g><g><title>get (&lt;frozen _collections_abc&gt;:774) (10 samples, 0.16%)</title><rect x="2.0459%" y="244" width="0.1562%" height="15" fill="rgb(240,193,28)" fg:x="131" fg:w="10"/><text x="2.2959%" y="254.50"></text></g><g><title>__getitem__ (&lt;frozen os&gt;:679) (10 samples, 0.16%)</title><rect x="2.0459%" y="260" width="0.1562%" height="15" fill="rgb(216,20,37)" fg:x="131" fg:w="10"/><text x="2.2959%" y="270.50"></text></g><g><title>_aroute (graph/graph.py:108) (26 samples, 0.41%)</title><rect x="1.9210%" y="116" width="0.4061%" height="15" fill="rgb(206,188,39)" fg:x="123" fg:w="26"/><text x="2.1710%" y="126.50"></text></g><g><title>astream (pregel/__init__.py:1397) (9 samples, 0.14%)</title><rect x="2.6394%" y="132" width="0.1406%" height="15" fill="rgb(217,207,13)" fg:x="169" fg:w="9"/><text x="2.8894%" y="142.50"></text></g><g><title>__aenter__ (pregel/loop.py:698) (9 samples, 0.14%)</title><rect x="2.6394%" y="148" width="0.1406%" height="15" fill="rgb(231,73,38)" fg:x="169" fg:w="9"/><text x="2.8894%" y="158.50"></text></g><g><title>enter_async_context (contextlib.py:650) (9 samples, 0.14%)</title><rect x="2.6394%" y="164" width="0.1406%" height="15" fill="rgb(225,20,46)" fg:x="169" fg:w="9"/><text x="2.8894%" y="174.50"></text></g><g><title>__aenter__ (contextlib.py:210) (9 samples, 0.14%)</title><rect x="2.6394%" y="180" width="0.1406%" height="15" fill="rgb(210,31,41)" fg:x="169" fg:w="9"/><text x="2.8894%" y="190.50"></text></g><g><title>astream (pregel/__init__.py:1422) (10 samples, 0.16%)</title><rect x="2.7799%" y="132" width="0.1562%" height="15" fill="rgb(221,200,47)" fg:x="178" fg:w="10"/><text x="3.0299%" y="142.50"></text></g><g><title>to_thread (asyncio/threads.py:25) (8 samples, 0.12%)</title><rect x="2.8112%" y="148" width="0.1249%" height="15" fill="rgb(226,26,5)" fg:x="180" fg:w="8"/><text x="3.0612%" y="158.50"></text></g><g><title>_output_writes (pregel/loop.py:513) (9 samples, 0.14%)</title><rect x="2.9830%" y="180" width="0.1406%" height="15" fill="rgb(249,33,26)" fg:x="191" fg:w="9"/><text x="3.2330%" y="190.50"></text></g><g><title>_emit (pregel/loop.py:506) (8 samples, 0.12%)</title><rect x="2.9986%" y="196" width="0.1249%" height="15" fill="rgb(235,183,28)" fg:x="192" fg:w="8"/><text x="3.2486%" y="206.50"></text></g><g><title>&lt;genexpr&gt; (pregel/loop.py:513) (8 samples, 0.12%)</title><rect x="2.9986%" y="212" width="0.1249%" height="15" fill="rgb(221,5,38)" fg:x="192" fg:w="8"/><text x="3.2486%" y="222.50"></text></g><g><title>atick (pregel/runner.py:131) (16 samples, 0.25%)</title><rect x="2.9830%" y="148" width="0.2499%" height="15" fill="rgb(247,18,42)" fg:x="191" fg:w="16"/><text x="3.2330%" y="158.50"></text></g><g><title>put_writes (pregel/loop.py:227) (16 samples, 0.25%)</title><rect x="2.9830%" y="164" width="0.2499%" height="15" fill="rgb(241,131,45)" fg:x="191" fg:w="16"/><text x="3.2330%" y="174.50"></text></g><g><title>_output_writes (pregel/loop.py:518) (7 samples, 0.11%)</title><rect x="3.1235%" y="180" width="0.1093%" height="15" fill="rgb(249,31,29)" fg:x="200" fg:w="7"/><text x="3.3735%" y="190.50"></text></g><g><title>_emit (pregel/loop.py:506) (7 samples, 0.11%)</title><rect x="3.1235%" y="196" width="0.1093%" height="15" fill="rgb(225,111,53)" fg:x="200" fg:w="7"/><text x="3.3735%" y="206.50"></text></g><g><title>&lt;genexpr&gt; (pregel/loop.py:518) (7 samples, 0.11%)</title><rect x="3.1235%" y="212" width="0.1093%" height="15" fill="rgb(238,160,17)" fg:x="200" fg:w="7"/><text x="3.3735%" y="222.50"></text></g><g><title>astream (pregel/__init__.py:1429) (21 samples, 0.33%)</title><rect x="2.9361%" y="132" width="0.3280%" height="15" fill="rgb(214,148,48)" fg:x="188" fg:w="21"/><text x="3.1861%" y="142.50"></text></g><g><title>ainvoke (pregel/__init__.py:1539) (52 samples, 0.81%)</title><rect x="2.5301%" y="116" width="0.8121%" height="15" fill="rgb(232,36,49)" fg:x="162" fg:w="52"/><text x="2.7801%" y="126.50"></text></g><g><title>ensure_config (langchain_core/runnables/config.py:174) (14 samples, 0.22%)</title><rect x="3.4203%" y="132" width="0.2186%" height="15" fill="rgb(209,103,24)" fg:x="219" fg:w="14"/><text x="3.6703%" y="142.50"></text></g><g><title>&lt;dictcomp&gt; (langchain_core/runnables/config.py:175) (14 samples, 0.22%)</title><rect x="3.4203%" y="148" width="0.2186%" height="15" fill="rgb(229,88,8)" fg:x="219" fg:w="14"/><text x="3.6703%" y="158.50"></text></g><g><title>copy (langchain_core/callbacks/base.py:913) (13 samples, 0.20%)</title><rect x="3.4359%" y="164" width="0.2030%" height="15" fill="rgb(213,181,19)" fg:x="220" fg:w="13"/><text x="3.6859%" y="174.50"></text></g><g><title>__init__ (langchain_core/callbacks/base.py:907) (7 samples, 0.11%)</title><rect x="3.5296%" y="180" width="0.1093%" height="15" fill="rgb(254,191,54)" fg:x="226" fg:w="7"/><text x="3.7796%" y="190.50"></text></g><g><title>ainvoke (utils/runnable.py:142) (34 samples, 0.53%)</title><rect x="3.3578%" y="116" width="0.5310%" height="15" fill="rgb(241,83,37)" fg:x="215" fg:w="34"/><text x="3.6078%" y="126.50"></text></g><g><title>ainvoke (utils/runnable.py:145) (12 samples, 0.19%)</title><rect x="3.8888%" y="116" width="0.1874%" height="15" fill="rgb(233,36,39)" fg:x="249" fg:w="12"/><text x="4.1388%" y="126.50"></text></g><g><title>get_async_callback_manager_for_config (langchain_core/runnables/config.py:503) (12 samples, 0.19%)</title><rect x="3.8888%" y="132" width="0.1874%" height="15" fill="rgb(226,3,54)" fg:x="249" fg:w="12"/><text x="4.1388%" y="142.50"></text></g><g><title>configure (langchain_core/callbacks/manager.py:1996) (12 samples, 0.19%)</title><rect x="3.8888%" y="148" width="0.1874%" height="15" fill="rgb(245,192,40)" fg:x="249" fg:w="12"/><text x="4.1388%" y="158.50"></text></g><g><title>ainvoke (utils/runnable.py:146) (8 samples, 0.12%)</title><rect x="4.0762%" y="116" width="0.1249%" height="15" fill="rgb(238,167,29)" fg:x="261" fg:w="8"/><text x="4.3262%" y="126.50"></text></g><g><title>ainvoke (utils/runnable.py:154) (7 samples, 0.11%)</title><rect x="4.2012%" y="116" width="0.1093%" height="15" fill="rgb(232,182,51)" fg:x="269" fg:w="7"/><text x="4.4512%" y="126.50"></text></g><g><title>shield (asyncio/tasks.py:884) (13 samples, 0.20%)</title><rect x="4.3105%" y="148" width="0.2030%" height="15" fill="rgb(231,60,39)" fg:x="276" fg:w="13"/><text x="4.5605%" y="158.50"></text></g><g><title>_ensure_future (asyncio/tasks.py:680) (13 samples, 0.20%)</title><rect x="4.3105%" y="164" width="0.2030%" height="15" fill="rgb(208,69,12)" fg:x="276" fg:w="13"/><text x="4.5605%" y="174.50"></text></g><g><title>ainvoke (utils/runnable.py:164) (14 samples, 0.22%)</title><rect x="4.3105%" y="116" width="0.2186%" height="15" fill="rgb(235,93,37)" fg:x="276" fg:w="14"/><text x="4.5605%" y="126.50"></text></g><g><title>wrapped (langchain_core/callbacks/manager.py:237) (14 samples, 0.22%)</title><rect x="4.3105%" y="132" width="0.2186%" height="15" fill="rgb(213,116,39)" fg:x="276" fg:w="14"/><text x="4.5605%" y="142.50"></text></g><g><title>ensure_config (langchain_core/runnables/config.py:176) (10 samples, 0.16%)</title><rect x="4.8102%" y="148" width="0.1562%" height="15" fill="rgb(222,207,29)" fg:x="308" fg:w="10"/><text x="5.0602%" y="158.50"></text></g><g><title>ainvoke (utils/runnable.py:359) (16 samples, 0.25%)</title><rect x="4.7478%" y="132" width="0.2499%" height="15" fill="rgb(206,96,30)" fg:x="304" fg:w="16"/><text x="4.9978%" y="142.50"></text></g><g><title>tracing_is_enabled (langsmith/utils.py:105) (8 samples, 0.12%)</title><rect x="5.3256%" y="212" width="0.1249%" height="15" fill="rgb(218,138,4)" fg:x="341" fg:w="8"/><text x="5.5756%" y="222.50"></text></g><g><title>get_env_var (langsmith/utils.py:376) (8 samples, 0.12%)</title><rect x="5.3256%" y="228" width="0.1249%" height="15" fill="rgb(250,191,14)" fg:x="341" fg:w="8"/><text x="5.5756%" y="238.50"></text></g><g><title>get (&lt;frozen _collections_abc&gt;:774) (8 samples, 0.12%)</title><rect x="5.3256%" y="244" width="0.1249%" height="15" fill="rgb(239,60,40)" fg:x="341" fg:w="8"/><text x="5.5756%" y="254.50"></text></g><g><title>ainvoke (utils/runnable.py:360) (31 samples, 0.48%)</title><rect x="4.9977%" y="132" width="0.4841%" height="15" fill="rgb(206,27,48)" fg:x="320" fg:w="31"/><text x="5.2477%" y="142.50"></text></g><g><title>get_async_callback_manager_for_config (langchain_core/runnables/config.py:503) (28 samples, 0.44%)</title><rect x="5.0445%" y="148" width="0.4373%" height="15" fill="rgb(225,35,8)" fg:x="323" fg:w="28"/><text x="5.2945%" y="158.50"></text></g><g><title>configure (langchain_core/callbacks/manager.py:1996) (28 samples, 0.44%)</title><rect x="5.0445%" y="164" width="0.4373%" height="15" fill="rgb(250,213,24)" fg:x="323" fg:w="28"/><text x="5.2945%" y="174.50"></text></g><g><title>_configure (langchain_core/callbacks/manager.py:2191) (10 samples, 0.16%)</title><rect x="5.3256%" y="180" width="0.1562%" height="15" fill="rgb(247,123,22)" fg:x="341" fg:w="10"/><text x="5.5756%" y="190.50"></text></g><g><title>_tracing_v2_is_enabled (langchain_core/tracers/context.py:149) (10 samples, 0.16%)</title><rect x="5.3256%" y="196" width="0.1562%" height="15" fill="rgb(231,138,38)" fg:x="341" fg:w="10"/><text x="5.5756%" y="206.50"></text></g><g><title>shield (asyncio/tasks.py:884) (10 samples, 0.16%)</title><rect x="5.7629%" y="164" width="0.1562%" height="15" fill="rgb(231,145,46)" fg:x="369" fg:w="10"/><text x="6.0129%" y="174.50"></text></g><g><title>_ensure_future (asyncio/tasks.py:680) (9 samples, 0.14%)</title><rect x="5.7785%" y="180" width="0.1406%" height="15" fill="rgb(251,118,11)" fg:x="370" fg:w="9"/><text x="6.0285%" y="190.50"></text></g><g><title>arun_with_retry (pregel/retry.py:79) (81 samples, 1.27%)</title><rect x="4.6697%" y="116" width="1.2650%" height="15" fill="rgb(217,147,25)" fg:x="299" fg:w="81"/><text x="4.9197%" y="126.50"></text></g><g><title>ainvoke (utils/runnable.py:391) (14 samples, 0.22%)</title><rect x="5.7161%" y="132" width="0.2186%" height="15" fill="rgb(247,81,37)" fg:x="366" fg:w="14"/><text x="5.9661%" y="142.50"></text></g><g><title>wrapped (langchain_core/callbacks/manager.py:237) (14 samples, 0.22%)</title><rect x="5.7161%" y="148" width="0.2186%" height="15" fill="rgb(209,12,38)" fg:x="366" fg:w="14"/><text x="5.9661%" y="158.50"></text></g><g><title>&lt;module&gt; (perf_test.py:81) (379 samples, 5.92%)</title><rect x="0.1093%" y="68" width="5.9191%" height="15" fill="rgb(227,1,9)" fg:x="7" fg:w="379"/><text x="0.3593%" y="78.50">&lt;module&gt;..</text></g><g><title>run (asyncio/runners.py:190) (379 samples, 5.92%)</title><rect x="0.1093%" y="84" width="5.9191%" height="15" fill="rgb(248,47,43)" fg:x="7" fg:w="379"/><text x="0.3593%" y="94.50">run (asy..</text></g><g><title>run (asyncio/runners.py:118) (379 samples, 5.92%)</title><rect x="0.1093%" y="100" width="5.9191%" height="15" fill="rgb(221,10,30)" fg:x="7" fg:w="379"/><text x="0.3593%" y="110.50">run (asy..</text></g><g><title>_worker (concurrent/futures/thread.py:81) (5,805 samples, 90.66%)</title><rect x="6.0284%" y="116" width="90.6606%" height="15" fill="rgb(210,229,1)" fg:x="386" fg:w="5805"/><text x="6.2784%" y="126.50">_worker (concurrent/futures/thread.py:81)</text></g><g><title>local_read (pregel/algo.py:109) (9 samples, 0.14%)</title><rect x="96.7203%" y="164" width="0.1406%" height="15" fill="rgb(222,148,37)" fg:x="6193" fg:w="9"/><text x="96.9703%" y="174.50"></text></g><g><title>ChannelsManager (pregel/manager.py:44) (10 samples, 0.16%)</title><rect x="96.9233%" y="196" width="0.1562%" height="15" fill="rgb(234,67,33)" fg:x="6206" fg:w="10"/><text x="97.1733%" y="206.50"></text></g><g><title>__enter__ (contextlib.py:137) (15 samples, 0.23%)</title><rect x="96.8608%" y="180" width="0.2343%" height="15" fill="rgb(247,98,35)" fg:x="6202" fg:w="15"/><text x="97.1108%" y="190.50"></text></g><g><title>local_read (pregel/algo.py:110) (24 samples, 0.37%)</title><rect x="96.8608%" y="164" width="0.3748%" height="15" fill="rgb(247,138,52)" fg:x="6202" fg:w="24"/><text x="97.1108%" y="174.50"></text></g><g><title>__exit__ (contextlib.py:144) (9 samples, 0.14%)</title><rect x="97.0951%" y="180" width="0.1406%" height="15" fill="rgb(213,79,30)" fg:x="6217" fg:w="9"/><text x="97.3451%" y="190.50"></text></g><g><title>ChannelsManager (pregel/manager.py:42) (9 samples, 0.14%)</title><rect x="97.0951%" y="196" width="0.1406%" height="15" fill="rgb(246,177,23)" fg:x="6217" fg:w="9"/><text x="97.3451%" y="206.50"></text></g><g><title>__exit__ (contextlib.py:586) (7 samples, 0.11%)</title><rect x="97.1263%" y="212" width="0.1093%" height="15" fill="rgb(230,62,27)" fg:x="6219" fg:w="7"/><text x="97.3763%" y="222.50"></text></g><g><title>do_read (pregel/read.py:102) (42 samples, 0.66%)</title><rect x="96.7203%" y="148" width="0.6559%" height="15" fill="rgb(216,154,8)" fg:x="6193" fg:w="42"/><text x="96.9703%" y="158.50"></text></g><g><title>local_read (pregel/algo.py:114) (9 samples, 0.14%)</title><rect x="97.2357%" y="164" width="0.1406%" height="15" fill="rgb(244,35,45)" fg:x="6226" fg:w="9"/><text x="97.4857%" y="174.50"></text></g><g><title>do_read (pregel/read.py:86) (8 samples, 0.12%)</title><rect x="97.3762%" y="148" width="0.1249%" height="15" fill="rgb(251,115,12)" fg:x="6235" fg:w="8"/><text x="97.6262%" y="158.50"></text></g><g><title>tick (pregel/loop.py:257) (21 samples, 0.33%)</title><rect x="97.5480%" y="148" width="0.3280%" height="15" fill="rgb(240,54,50)" fg:x="6246" fg:w="21"/><text x="97.7980%" y="158.50"></text></g><g><title>apply_writes (pregel/algo.py:218) (11 samples, 0.17%)</title><rect x="97.7042%" y="164" width="0.1718%" height="15" fill="rgb(233,84,52)" fg:x="6256" fg:w="11"/><text x="97.9542%" y="174.50"></text></g><g><title>update (channels/last_value.py:45) (9 samples, 0.14%)</title><rect x="97.7354%" y="180" width="0.1406%" height="15" fill="rgb(207,117,47)" fg:x="6258" fg:w="9"/><text x="97.9854%" y="190.50"></text></g><g><title>tick (pregel/loop.py:267) (10 samples, 0.16%)</title><rect x="97.8760%" y="148" width="0.1562%" height="15" fill="rgb(249,43,39)" fg:x="6267" fg:w="10"/><text x="98.1260%" y="158.50"></text></g><g><title>_emit (pregel/loop.py:506) (10 samples, 0.16%)</title><rect x="97.8760%" y="164" width="0.1562%" height="15" fill="rgb(209,38,44)" fg:x="6267" fg:w="10"/><text x="98.1260%" y="174.50"></text></g><g><title>&lt;genexpr&gt; (pregel/loop.py:267) (10 samples, 0.16%)</title><rect x="97.8760%" y="180" width="0.1562%" height="15" fill="rgb(236,212,23)" fg:x="6267" fg:w="10"/><text x="98.1260%" y="190.50"></text></g><g><title>map_output_values (pregel/io.py:86) (10 samples, 0.16%)</title><rect x="97.8760%" y="196" width="0.1562%" height="15" fill="rgb(242,79,21)" fg:x="6267" fg:w="10"/><text x="98.1260%" y="206.50"></text></g><g><title>&lt;setcomp&gt; (pregel/io.py:86) (10 samples, 0.16%)</title><rect x="97.8760%" y="212" width="0.1562%" height="15" fill="rgb(211,96,35)" fg:x="6267" fg:w="10"/><text x="98.1260%" y="222.50"></text></g><g><title>tick (pregel/loop.py:285) (8 samples, 0.12%)</title><rect x="98.0790%" y="148" width="0.1249%" height="15" fill="rgb(253,215,40)" fg:x="6280" fg:w="8"/><text x="98.3290%" y="158.50"></text></g><g><title>&lt;genexpr&gt; (pregel/algo.py:383) (16 samples, 0.25%)</title><rect x="98.3758%" y="180" width="0.2499%" height="15" fill="rgb(211,81,21)" fg:x="6299" fg:w="16"/><text x="98.6258%" y="190.50"></text></g><g><title>read_channel (pregel/io.py:19) (16 samples, 0.25%)</title><rect x="98.3758%" y="196" width="0.2499%" height="15" fill="rgb(208,190,38)" fg:x="6299" fg:w="16"/><text x="98.6258%" y="206.50"></text></g><g><title>get (channels/ephemeral_value.py:65) (7 samples, 0.11%)</title><rect x="98.5163%" y="212" width="0.1093%" height="15" fill="rgb(235,213,38)" fg:x="6308" fg:w="7"/><text x="98.7663%" y="222.50"></text></g><g><title>prepare_next_tasks (pregel/algo.py:379) (21 samples, 0.33%)</title><rect x="98.3445%" y="164" width="0.3280%" height="15" fill="rgb(237,122,38)" fg:x="6297" fg:w="21"/><text x="98.5945%" y="174.50"></text></g><g><title>prepare_next_tasks (pregel/algo.py:406) (31 samples, 0.48%)</title><rect x="98.7350%" y="164" width="0.4841%" height="15" fill="rgb(244,218,35)" fg:x="6322" fg:w="31"/><text x="98.9850%" y="174.50"></text></g><g><title>tick (pregel/loop.py:300) (85 samples, 1.33%)</title><rect x="98.2040%" y="148" width="1.3275%" height="15" fill="rgb(240,68,47)" fg:x="6288" fg:w="85"/><text x="98.4540%" y="158.50"></text></g><g><title>prepare_next_tasks (pregel/algo.py:425) (15 samples, 0.23%)</title><rect x="99.2972%" y="164" width="0.2343%" height="15" fill="rgb(210,16,53)" fg:x="6358" fg:w="15"/><text x="99.5472%" y="174.50"></text></g><g><title>run (concurrent/futures/thread.py:58) (206 samples, 3.22%)</title><rect x="96.6891%" y="132" width="3.2172%" height="15" fill="rgb(235,124,12)" fg:x="6191" fg:w="206"/><text x="96.9391%" y="142.50">run..</text></g><g><title>tick (pregel/loop.py:364) (18 samples, 0.28%)</title><rect x="99.6252%" y="148" width="0.2811%" height="15" fill="rgb(224,169,11)" fg:x="6379" fg:w="18"/><text x="99.8752%" y="158.50"></text></g><g><title>_emit (pregel/loop.py:506) (18 samples, 0.28%)</title><rect x="99.6252%" y="164" width="0.2811%" height="15" fill="rgb(250,166,2)" fg:x="6379" fg:w="18"/><text x="99.8752%" y="174.50"></text></g><g><title>&lt;genexpr&gt; (pregel/loop.py:364) (18 samples, 0.28%)</title><rect x="99.6252%" y="180" width="0.2811%" height="15" fill="rgb(242,216,29)" fg:x="6379" fg:w="18"/><text x="99.8752%" y="190.50"></text></g><g><title>map_debug_tasks (pregel/debug.py:94) (13 samples, 0.20%)</title><rect x="99.7033%" y="196" width="0.2030%" height="15" fill="rgb(230,116,27)" fg:x="6384" fg:w="13"/><text x="99.9533%" y="206.50"></text></g><g><title>_worker (concurrent/futures/thread.py:83) (209 samples, 3.26%)</title><rect x="96.6891%" y="116" width="3.2641%" height="15" fill="rgb(228,99,48)" fg:x="6191" fg:w="209"/><text x="96.9391%" y="126.50">_wo..</text></g><g><title>all (6,403 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(253,11,6)" fg:x="0" fg:w="6403"/><text x="0.2500%" y="62.50"></text></g><g><title>_bootstrap (threading.py:1002) (6,017 samples, 93.97%)</title><rect x="6.0284%" y="68" width="93.9716%" height="15" fill="rgb(247,143,39)" fg:x="386" fg:w="6017"/><text x="6.2784%" y="78.50">_bootstrap (threading.py:1002)</text></g><g><title>_bootstrap_inner (threading.py:1045) (6,017 samples, 93.97%)</title><rect x="6.0284%" y="84" width="93.9716%" height="15" fill="rgb(236,97,10)" fg:x="386" fg:w="6017"/><text x="6.2784%" y="94.50">_bootstrap_inner (threading.py:1045)</text></g><g><title>run (threading.py:982) (6,017 samples, 93.97%)</title><rect x="6.0284%" y="100" width="93.9716%" height="15" fill="rgb(233,208,19)" fg:x="386" fg:w="6017"/><text x="6.2784%" y="110.50">run (threading.py:982)</text></g></svg></svg>